@model dynamic

@{
    ViewBag.Title = "New Rental Form";
}


<link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/4.7.0/css/font-awesome.min.css">

<h2>New Rental Form</h2>
<form id="newRental">
    <div class="form-group">
        <label>Customer</label>
        <div class="tt-container">
            <input id="customer" name="customer" required data-rule-validcustomer="true" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="form-group">
        <label>Movie</label>
        <div class="tt-contatiner">
            <input id="movie" name="movie" data-rule-atleastonemove="true" type="text" value="" class="form-control" />
        </div>
    </div>

    <div class="row">
        <div class="col-md-4 col-sm-4">
            <ul id="movies" class="list-group"></ul>
        </div>
    </div>

    <button class="btn btn-primary"> Submit </button>
    <button id='delMovies' style="display:none" class='btn btn-trash'><i class='fa fa-trash'> Remove </i></button>

</form>


@section scripts
{
    @Scripts.Render("~/bundles/jqueryval");
    <script>
        var vm = {
            movieIds: [] @* array of objects to can push objects on it *@
        }

        $(document).ready(function () {
            var customers = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/customers?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#customer').typeahead({
                highlight: true,
                minLength: 2
            }, {
                name: 'customers',
                display: 'name',
                source: customers
            }).on('typeahead:select', function (e, customer) {
                vm.customerId = customer.customerId;
            });

            var movies = new Bloodhound({
                datumTokenizer: Bloodhound.tokenizers.obj.whitespace('name'),
                queryTokenizer: Bloodhound.tokenizers.whitespace,
                remote: {
                    url: '/api/movies?query=%QUERY',
                    wildcard: '%QUERY'
                }
            });

            $('#movie').typeahead({
                highlight: true,
                minLength: 2
            }, {
                name: 'movies',
                display: 'name',
                limit: 20,
                source: movies
            }).on('typeahead:select', function (e, movie) {
                $("#movies").append(" <li class='list-group-item'>"
                   + movie.name + " </li>");
                $("#movie").typeahead('val', '');
                vm.movieIds.push(movie.id);

                $('#delMovies').show();
     
            });
            $('#delMovies').on('click', function () {
                $('#movies').empty();
                $('#customer').typeahead("val", "");
                $('#delMovies').hide();
                vm = { movieIds: [] };
                return false;
            });
  
            $.validator.addMethod("ValidCustomer", function () {
                return vm.customerId && vm.customerId !== 0;
            }, "Please. Select a valid customer.")

            $.validator.addMethod("atLeastOneMove", function () {
                return vm.movieIds && vm.movieIds.length > 0;
            }, "Please. choose at leat one movie");

            var validator = $("#newRental").validate({
                submitHandler: function () {
                    $.ajax({
                        url: "/api/newRentals",
                        method: "post",
                        data: vm
                    })
                    .done(function () {
                        toastr.success("Rentals Successfully recorded.", "Sully Says!");
                        $("#customer").typeahead("val", "");
                        $("#movie").typeahead("val", "");
                        $("#movies").empty();

                        vm = { movieIds: [] };

                        validator.resetForm();
                    })
                    .fail(function () {
                        toastr.error("Something went wrong!");
                    });
                    return false;
                }
            });
        });
    </script>
}